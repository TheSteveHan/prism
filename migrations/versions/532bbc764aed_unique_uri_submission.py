"""unique uri submission

Revision ID: 532bbc764aed
Revises: 028b61b3b866
Create Date: 2025-02-17 13:31:50.545672

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.sql import text


# revision identifiers, used by Alembic.
revision = '532bbc764aed'
down_revision = '028b61b3b866'
branch_labels = None
depends_on = None


def upgrade():
    conn = op.get_bind()

    # Step 1: Find duplicate URIs
    duplicates_query = text("""
        SELECT uri FROM post_submission
        GROUP BY uri
        HAVING COUNT(uri) > 1
    """)
    result = conn.execute(duplicates_query)

    duplicate_uris = [row[0] for row in result]

    # Step 2: Delete all but one record for each duplicate URI
    for uri in duplicate_uris:
        delete_query = text("""
            DELETE FROM post_submission
            WHERE id NOT IN (
                SELECT MIN(id) FROM post_submission WHERE uri = :uri
            ) AND uri = :uri
        """)
        conn.execute(delete_query, {"uri": uri})

    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('post_submission', schema=None) as batch_op:
        batch_op.drop_index('ix_post_submission_uri')
        batch_op.create_index(batch_op.f('ix_post_submission_uri'), ['uri'], unique=True)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('post_submission', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_post_submission_uri'))
        batch_op.create_index('ix_post_submission_uri', ['uri'], unique=False)

    # ### end Alembic commands ###
